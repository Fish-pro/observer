---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: observers.ob.observer.io
spec:
  group: ob.observer.io
  names:
    kind: Observer
    listKind: ObserverList
    plural: observers
    singular: observer
  scope: Namespace
  versions:
  - additionalPrinterColumns:
    - description: Report the puller ready status
      jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - description: The creation date
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Observer is the Schema for the observers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ObserverSpec defines the desired state of Observer
            properties:
              agent:
                description: Agent define the agent setting it is keyval/otel-go-agent:v0.6.0
                  by default
                properties:
                  Endpoint:
                    description: Endpoint define the report target it is jaeger component
                      endpoint by default
                    type: string
                  imageRepository:
                    description: ImageRepository sets the container registry to pull
                      images from. if not set, the ImageRepository defined in KarmadaSpec
                      will be used instead.
                    type: string
                  imageTag:
                    description: ImageTag allows to specify a tag for the image. In
                      case this value is set, operator does not change automatically
                      the version of the above components during upgrades.
                    type: string
                type: object
              jaeger:
                description: Jaeger define the jaeger component setting
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations is an unstructured key value map stored
                      with a resource that may be set by external tools to store and
                      retrieve arbitrary metadata. They are not queryable and should
                      be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                    type: object
                  imageRepository:
                    description: ImageRepository sets the container registry to pull
                      images from. if not set, the ImageRepository defined in KarmadaSpec
                      will be used instead.
                    type: string
                  imageTag:
                    description: ImageTag allows to specify a tag for the image. In
                      case this value is set, operator does not change automatically
                      the version of the above components during upgrades.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Map of string keys and values that can be used to
                      organize and categorize (scope and select) objects. May match
                      selectors of replication controllers and services. More info:
                      http://kubernetes.io/docs/user-guide/labels'
                    type: object
                  name:
                    description: Name define the jaeger name it is Observer's jaeger
                      by default
                    type: string
                  namespace:
                    description: Namespace define the jaeger namespace it is Observer's
                      namespace by default
                    type: string
                  replicas:
                    description: Number of desired pods. This is a pointer to distinguish
                      between explicit zero and not specified. Defaults to 1.
                    format: int32
                    type: integer
                  resources:
                    description: 'Compute Resources required by this component. More
                      info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  serviceType:
                    description: ServiceType represents the service type of Jaeger
                      it is NodePort by default.
                    type: string
                type: object
              launcher:
                description: Launcher define the initContainer launcher setting it
                  is keyval/launcher:v0.1 by default
                properties:
                  imageRepository:
                    description: ImageRepository sets the container registry to pull
                      images from. if not set, the ImageRepository defined in KarmadaSpec
                      will be used instead.
                    type: string
                  imageTag:
                    description: ImageTag allows to specify a tag for the image. In
                      case this value is set, operator does not change automatically
                      the version of the above components during upgrades.
                    type: string
                type: object
              resourceSelectors:
                description: ResourceSelectors used to select resources. Nil or empty
                  selector is not allowed and doesn't mean match all kinds of resources
                  for security concerns that sensitive resources(like Secret) might
                  be accidentally propagated.
                items:
                  description: ResourceSelector the resources will be selected.
                  properties:
                    apiVersion:
                      description: APIVersion represents the API version of the target
                        resources.
                      type: string
                    kind:
                      description: Kind represents the Kind of the target resources.
                      type: string
                    name:
                      description: Name of the target resource. Default is empty,
                        which means selecting all resources.
                      type: string
                    namespace:
                      description: Namespace of the target resource. Default is empty,
                        which means inherit from the parent object scope.
                      type: string
                  required:
                  - apiVersion
                  - kind
                  - name
                  type: object
                minItems: 1
                type: array
            required:
            - resourceSelectors
            type: object
          status:
            description: ObserverStatus defines the observed state of Observer
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
